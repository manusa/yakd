---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: yakd-dashboard
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/name: yakd-dashboard
    name: yakd-dashboard
    namespace: yakd-dashboard
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: yakd-dashboard
    labels:
      app.kubernetes.io/name: yakd-dashboard
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
    - kind: ServiceAccount
      name: yakd-dashboard
      namespace: yakd-dashboard
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/name: yakd-dashboard
    name: yakd-dashboard
    namespace: yakd-dashboard
  spec:
    type: NodePort
    ports:
      - port: 80
        targetPort: 8080
    selector:
      app.kubernetes.io/name: yakd-dashboard
      app.kubernetes.io/instance: yakd-dashboard
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/name: yakd-dashboard
      app.kubernetes.io/instance: yakd-dashboard
    name: yakd-dashboard
    namespace: yakd-dashboard
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: yakd-dashboard
        app.kubernetes.io/instance: yakd-dashboard
    template:
      metadata:
        labels:
          app.kubernetes.io/name: yakd-dashboard
          app.kubernetes.io/instance: yakd-dashboard
          gcp-auth-skip-secret: "true"
      spec:
        containers:
          - name: yakd
            image: marcnuri/yakd:snapshot
            imagePullPolicy: Always
            ports:
              - name: http
                containerPort: 8080
                protocol: TCP
            env:
              - name: KUBERNETES_NAMESPACE
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: HOSTNAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
            resources:
              limits:
                memory: 256Mi
              requests:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              privileged: false
              runAsUser: 1001
              runAsGroup: 2001
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 10
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 10
        restartPolicy: Always
        serviceAccountName: yakd-dashboard
        nodeSelector:
          "kubernetes.io/os": linux
